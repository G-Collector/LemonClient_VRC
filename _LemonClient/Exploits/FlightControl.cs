using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using MelonLoader;
using System.Collections;

namespace _LemonClient.Exploits
{
    public class FlightControl
    {
        public static bool flightEnabled;
        public static bool flightEnabledZDM;
        public static Vector3 originalGravity = Physics.gravity;
        public static float flightSpeed = 1;
        public static void EnableFlightMethod2(bool toggleState) //ZeroDay Remastered Method. Working as of Desktop testing. Thanks ZeroDay! Your code is nice
        {
            if (toggleState == true)
            {
                flightEnabledZDM = true;
                ExtraDependencies.ZDR_Keybinds.flycor = MelonCoroutines.Start(ExtraDependencies.ZDR_Keybinds.Fly());
                VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = false;
            }
            else if (toggleState == false && flightEnabledZDM)
            {
                flightEnabledZDM = false;
                MelonCoroutines.Stop(ExtraDependencies.ZDR_Keybinds.flycor);
                VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
            }
        }

        internal static void ToggleCollidersOnPlayer(bool toggle)
        {
            VRCPlayer localPlayer = VRCPlayer.field_Internal_Static_VRCPlayer_0;

            if (localPlayer == null)
            {
                return;
            }

            Collider[] colliders = localPlayer.GetComponents<Collider>();

            for (int i = 0; i < colliders.Length; i++)
            {
                colliders[i].enabled = toggle;
            }
        }
    }
}

